!
! Magnolia CSL model file created on 2022-02-26T10:52:37.581
!
model! Model_mouse

initial

!===============Organ blood flow parameters

	constant HEM = 0.45 !Hematocrit frac
	constant BCO = 1040 ! blood co mL/h
	CO = BCO*(1-HEM) !plasma cardiac output; UNITS: mL/hr
	constant FQ_sp = 0.011 !flow to spleen; UNITS: fraction CO; 
  	constant FQ_ha = 0.020 !flow to liver; UNITS: fraction CO; 
	constant FQ_li = 0.16 !flow from liver out; UNITS: fraction CO; 
	constant FQ_kd = 0.091 !flow to kidneys; UNITS: fraction CO; 
	constant FQ_hrt = 0.066 !flow to heart; UNITS: fraction CO;
	constant FQ_brn = 0.033 !flow to brain; UNITS: fraction CO; 
	constant FQ_mu = 0.16 !flow to muscle; UNITS: fraction CO; 
    constant FQ_pa = 0.017 !flow to pancrease; UNITS: fraction CO; 
    constant FQ_ad = 0.070 !flow to adpose; UNITS: fraction CO; 
    constant FQ_in = 0.11 !flow to intestine; UNITS: fraction CO; 
	constant FQ_lng = 1.000 !flow from lung; UNITS: fraction CO; 
	constant FQ_re = 0.422 !flow to remainder; UNITS: fraction CO; 
	
!================Organ volume parameters 
	constant BW = 25 !bodyweight; UNITS: g
	constant FV_bld = 0.085 !volume of blood; UNITS: fraction BW:
	constant FV_in = 0.042 !volume of intestinal tract; UNITS: fraction BW;
	constant FV_sp = 0.0035 !volume of spleent; UNITS: fraction BW
	constant FV_li = 0.055 !volume of liver; UNITS: fraction BW
	constant FV_kd = 0.017 !volume of kidneys; UNITS: fraction BW
	constant FV_hrt = 0.0050 !volume of heart; UNITS: fraction BW
	constant FV_brn = 0.017 !volume of brain; UNITS: fraction BW
    constant FV_mu = 0.38 !volume of muscle; UNITS: fraction BW
	constant FV_lng = 0.0073 !volume of lungs; UNITS: fraction BW
	constant FV_pa = 0.006 !volume of pancreas; UNITS: fraction BW
	constant FV_ad = 0.070 !volume of adipose; UNITS: fraction BW	
	constant FV_re = 0.3122 !volume of remainder; UNITS: fraction BW


!Scaled blood flow parameters in ml/hr
    Q_sp = FQ_sp*CO
	Q_ha = FQ_ha*CO
	Q_li = FQ_li*CO
	Q_kd = FQ_kd*CO
	Q_brn = FQ_brn*CO
	Q_hrt = FQ_hrt*CO
	Q_mu = FQ_mu*CO
	Q_pa = FQ_pa*CO
	Q_ad = FQ_ad*CO
	Q_in = FQ_in*CO
	Q_lng = FQ_lng*CO
    Q_re = FQ_re*CO
    
!Scaled volume parameters in g (ml)
    V_bld = FV_bld*BW
	V_in = FV_in*BW
    V_sp = FV_sp*BW
	V_li = FV_li*BW
	V_kd = FV_kd*BW
	V_hrt = FV_hrt*BW
	V_brn = FV_brn*BW
	V_mu = FV_mu*BW
    V_lng = FV_lng*BW
    V_pa = FV_pa*BW
    V_ad = FV_ad*BW
	V_re = FV_re*BW
	V_pl = V_bld*(1-HEM) !plasma volume

!============Vascular Volume fraction
    constant sp = 0.17
    constant pa = 0.17
    constant ad = 0.04
    
!============Vascular Volume
    V_sp_vas = V_sp*sp
    V_sp_exv = V_sp*(1-sp)
    V_ad_vas = V_ad*ad
    V_ad_exv = V_ad*(1-ad)
    V_pa_vas = V_pa*pa
    V_pa_exv = V_pa*(1-pa)
    
!==========unbound fraction of DOX in plasma

    constant f_pl_u = 0.29
    
!================ GFR
    constant GFR = 17 ! unit ml/h
    
!============ Partition Coefficient and other parameters
    constant Kplu = 102
    constant Kphrt = 33.2
    constant Kpbrn = 0.245
    constant Kpmu = 15
    constant Kpkd = 90.9
    constant Kpin = 36.9
    constant Kpli = 168
    constant Kpre = 101
    constant f_pa_u = 0.00399
    constant f_sp_u = 0.00122
    constant f_ad_u = 0.0444
    constant PS_pa = 8.6 !ml/h
    constant PS_sp = 2.98 !ml/h
    constant PS_ad = 3.79 !ml/h
    constant CL_li = 585  !ml/h
    
!Mass balance checks
	FQ_total = FQ_ha+FQ_in+FQ_kd+FQ_brn+FQ_hrt+FQ_sp+FQ_mu+FQ_pa+FQ_ad+FQ_re !should equal 1
	FV_total = FV_li+FV_in+FV_kd+FV_brn+FV_hrt+FV_lng+FV_bld+FV_sp+FV_mu+FV_pa+FV_ad+FV_re !should equal 1	
	Q_total = Q_ha+Q_in+Q_kd+Q_brn+Q_hrt+Q_sp+Q_ad+Q_pa+Q_mu+Q_re !should equal CO
	V_total = V_li+V_in+V_kd+V_brn+V_hrt+V_lng+V_sp+V_bld+V_ad+V_pa+V_mu+V_re !should equal BW
	
! Drug Dosing 
    
    constant podose = 5 !ug/g= mg/kg
    constant BW = 25 !g
    DDose = podose*BW !ug
!Timing
    constant  tstop = 72   ! Length of experiment (hrs)
    constant points = 150    ! Number of points in plot
              CINT  = tstop/points  ! Communication interval



end ! initial


derivative        

    ! The DERIVATIVE section contains statements which are         
    ! used to compute derivatives
!Plasma
    dA_pl = CO*((C_lu/Kplu)-C_pl)
    A_pl = integ(dA_pl,DDose)
    C_pl = A_pl/V_pl


!Intestine
    dA_in = Q_in*(C_pl-C_in/Kpin)
    A_in = integ(dA_in,0.0)
    C_in = A_in/V_in

!Heart
    dA_hrt = Q_hrt*(C_pl-(C_hrt/Kphrt))
    A_hrt = integ(dA_hrt,0.0)
    C_hrt = A_hrt/V_hrt

!Brain
    dA_brn = Q_brn*(C_pl-(C_brn/Kpbrn))
    A_brn = integ(dA_brn,0.0)
    C_brn = A_brn/V_brn

!Muscle
    dA_mu = Q_mu*(C_pl-(C_mu/Kpmu))
    A_mu = integ(dA_mu,0.0)
    C_mu = A_mu/V_mu

!Remainer
    dA_re = Q_re*(C_pl-(C_re/Kpre))
    A_re = integ(dA_re,0.0)
    C_re = A_re/V_re

!Spleen
    dA_sp_vas = Q_sp*(C_pl-C_sp_vas)-PS_sp*(f_pl_u*C_sp_vas-f_sp_u*C_sp_exv)
    dA_sp_exv = PS_sp*(f_pl_u*C_sp_vas-f_sp_u*C_sp_exv)
    A_sp_vas = integ(dA_sp_vas,0.0)
    A_sp_exv = integ(dA_sp_exv,0.0)
    C_sp_vas = A_sp_vas/V_sp_vas
    C_sp_exv = A_sp_exv/V_sp_exv

!Pancreas
    dA_pa_vas = Q_pa*(C_pl-C_pa_vas)-PS_pa*(f_pl_u*C_pa_vas-(f_pa_u*C_pa_exv))
    dA_pa_exv = PS_pa*(f_pl_u*C_pa_vas-(f_pa_u*C_pa_exv))
    A_pa_vas = integ(dA_pa_vas,0.0)
    A_pa_exv = integ(dA_pa_exv,0.0)
    C_pa_vas = A_pa_vas/V_pa_vas
    C_pa_exv = A_pa_exv/V_pa_exv

!Adipose
    dA_ad_vas = Q_ad*(C_pl-C_ad_vas)-PS_ad*(f_pl_u*C_ad_vas-(f_ad_u*C_ad_exv))
    dA_ad_exv = PS_ad*(f_pl_u*C_ad_vas-(f_ad_u*C_ad_exv))
    A_ad_vas = integ(dA_ad_vas,0.0)
    A_ad_exv = integ(dA_ad_exv,0.0)
    C_ad_vas = A_ad_vas/V_ad_vas
    C_ad_exv = A_ad_exv/V_ad_exv

!Liver
    dA_li = Q_ha*C_pl+Q_sp*C_sp_vas+(Q_in*C_in/Kpin) ...
            +(Q_pa*C_pa_vas)-(Q_li*C_li/Kpli)-(CL_li*f_pl_u*C_li/Kpli)
    A_li = integ(dA_li,0.0)
    C_li = A_li/V_li

!Kidney
    dA_kd = Q_kd*(C_pl-(C_kd/Kpkd))-(GFR*f_pl_u*C_kd/Kpkd)
    A_kd = integ(dA_kd,0.0)
    C_kd= A_kd/V_kd

!Lung
    dA_lu = (Q_ha*C_li/Kpli)+(Q_kd*C_kd/Kpkd)+(Q_hrt*C_hrt/Kphrt)...
            +Q_brn*C_brn/Kpbrn ...
            +(Q_mu*C_mu/Kpmu)+(Q_re*C_re/Kpre)+(Q_ad*C_ad_vas)-(CO*C_lu/Kplu)
    A_lu = integ(dA_lu,0.0)
    C_lu= A_lu/V_lng

termt(t >= tstop, 'time limit')

end ! derivative    

end ! program
